#!/usr/bin/env bash

## Description: Install the node packages for cypress on the developers local machine
## Usage: cypress-install
## Example: "ddev cypress-install"
## Aliases: cypress:install,cyi,install-cypress

#ddev-generated

#-------------------------- Helper functions ------------------------------

green='\033[0;32m'
yellow='\033[1;33m'
NC='\033[0m'
divider='===================================================\n'
construction='\xF0\x9F\x9A\xA7'

#-------------------------- Execution -------------------------------------

echo -e "🚧 ${yellow} Initializing Cypress...${NC} 🚧"
echo -e "${green}${divider}${NC}"

# Make sure NVM works
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

CYPRESS_TESTS="tests/cypress"

# Check if cypress directory exists
if [ ! -d "${DDEV_APPROOT}/${CYPRESS_TESTS}" ]; then
    echo "❌ Cypress directory not found: ${DDEV_APPROOT}/${CYPRESS_TESTS}"
    echo "Please create the cypress directory structure first."
    exit 0
fi

cd ${DDEV_APPROOT}/${CYPRESS_TESTS}

# Check if .nvmrc exists
if [ ! -f "${DDEV_APPROOT}/${CYPRESS_TESTS}/.nvmrc" ]; then
    echo "❌ .nvmrc file not found in ${CYPRESS_TESTS}"
    echo "Please create a .nvmrc file with the desired Node.js version."
    exit 0
fi

NODE_VERSION=$(cat ${DDEV_APPROOT}/${CYPRESS_TESTS}/.nvmrc)

# Check if NVM is available
if ! command -v nvm &> /dev/null; then
    echo "❌ NVM not found. Please install NVM first."
    exit 0
fi

nvm install $NODE_VERSION
nvm use

# Check if package.json or package-lock.json exists
if [ ! -f "package.json" ] && [ ! -f "package-lock.json" ]; then
    echo "❌ No package.json or package-lock.json found in ${CYPRESS_TESTS}"
    echo "Please run 'npm init' and install cypress first."
    exit 0
fi

npm ci

echo '{
  "DRUSH_IS_DDEV": "true"
}
' > cypress.env.json
