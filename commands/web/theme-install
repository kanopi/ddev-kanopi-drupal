#!/usr/bin/env bash

## Description: Install and set up theme development tools in DDEV
## Usage: theme-install
## Example: ddev theme-install
## Aliases: theme:install,install-theme-tools,thi

#ddev-generated

# Abort if anything fails
set -e

#-------------------------- Helper functions --------------------------------

green='\033[0;32m'
yellow='\033[1;33m'
NC='\033[0m'
divider='===================================================\n'

#-------------------------- Settings --------------------------------

# Check if THEME environment variable is set
if [ -z "${THEME}" ]; then
    echo "‚ùå THEME environment variable not set."
    echo "Please run 'ddev project-configure' to set up your theme configuration."
    exit 1
fi

# Define paths.
FULL_THEME_PATH="/var/www/html/${DDEV_DOCROOT}/${THEME}"

#-------------------------- Execution -------------------------------------

# Check if theme directory exists
if [ ! -d "${FULL_THEME_PATH}" ]; then
    echo "‚ùå Theme directory not found: ${FULL_THEME_PATH}"
    echo "Please ensure your theme directory exists or update THEME configuration."
    exit 1
fi

# Theme initialization message
echo -e "üöß ${yellow} Installing theme development tools. ${NC} üöß"
echo -e "${green}${divider}${NC}"

# Move to the theme directory
echo -e "üöÄ ${yellow} Navigating to theme directory: ${FULL_THEME_PATH} ${NC} üöÄ"
echo -e "${green}${divider}${NC}"
cd "${FULL_THEME_PATH}"

# Check if package.json exists
if [ ! -f "${FULL_THEME_PATH}/package.json" ]; then
    echo "‚ùå No package.json found in theme directory: ${FULL_THEME_PATH}"
    echo "Please ensure your theme has a package.json file with npm scripts configured"
    echo "Run ddev theme-install to set up theme development tools first"
    exit 1
fi

# Install NPM dependencies
echo -e "üöß ${yellow} Installing NPM dependencies. ${NC} üöß"
echo -e "${green}${divider}${NC}"

export NVM_DIR="$HOME/.nvm" || echo "export NVM_DIR=$HOME/.nvm"
source "$NVM_DIR/nvm.sh" || echo "source $NVM_DIR/nvm.sh"
echo "NVM version: $(nvm --version)"

# Use Node version specified in .nvmrc if it exists
if [ -f "${FULL_THEME_PATH}/.nvmrc" ]; then
    NODE_VERSION=$(cat "${FULL_THEME_PATH}/.nvmrc")
    echo "Using Node.js version: ${NODE_VERSION}"
    nvm install "${NODE_VERSION}" || echo "nvm install"
    nvm alias default "${NODE_VERSION}" || echo "nvm alias"
    nvm use || echo "nvm use"
else
    echo "No .nvmrc file found, using default Node.js version"
fi
npm install --save patch-package || echo "npm install"

# Compile theme assets
echo -e "üöß ${yellow} Compiling theme assets. ${NC} üöß"
echo -e "${green}${divider}${NC}"
npm run build || echo "npm run build"

# Completion message
echo -e "üéâ ${yellow} Theme setup complete! ${NC} üéâ"
echo -e "To start watching for file changes, run: ${yellow}ddev theme-watch${NC}"
echo -e "${green}${divider}${NC}"
