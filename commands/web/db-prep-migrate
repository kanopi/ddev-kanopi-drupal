#!/usr/bin/env bash

## Description: Create and configure the migration database inside the DDEV web container
## Usage: db-prep-migrate
## Example: ddev db-prep-migrate
## Aliases: db:prep-migrate,migrate-prep-db

# Abort if anything fails
set -e

#ddev-generated

#-------------------------- Helper functions --------------------------------

green='\033[0;32m'
yellow='\033[1;33m'
NC='\033[0m'
divider='===================================================\n'

#-------------------------- Settings --------------------------------

# Migration database name
MIGRATE_DB_NAME="d7"

#-------------------------- Execution -------------------------------------

# Ensure the script is running inside the DDEV web container
if [ -z "$DDEV_HOSTNAME" ]; then
    echo -e "\n ‚ùå ${yellow} This command must be run inside the DDEV web container. ${NC}"
    echo -e "Use: ${green}ddev db-prep-migrate${NC} instead of running it manually."
    exit 1
fi

# Step 1: Create the Drupal 7 database
echo -e "üìÄ ${yellow} Creating migration database: ${MIGRATE_DB_NAME} ${NC} üìÄ"
echo -e "${green}${divider}${NC}"

mysql -e "CREATE DATABASE IF NOT EXISTS ${MIGRATE_DB_NAME};"
echo -e "‚úÖ  Migration database '${MIGRATE_DB_NAME}' is ready."

# Step 2: Import the database dump from a remote source
if [ -z "${MIGRATE_DB_SOURCE}" ] || [ -z "${MIGRATE_DB_ENV}" ]; then
    echo -e "\n ‚ùå ${yellow} MIGRATE_DB_SOURCE and MIGRATE_DB_ENV environment variables must be set inside the web container. ${NC}"
    exit 1
fi

echo -e "‚¨áÔ∏è ${yellow} Pulling database from ${MIGRATE_DB_SOURCE} (${MIGRATE_DB_ENV}). ${NC} ‚¨áÔ∏è"
echo -e "${green}${divider}${NC}"

drush sql-drop -y --database="${MIGRATE_DB_NAME}"
drush sql-sync @${MIGRATE_DB_SOURCE}.${MIGRATE_DB_ENV} @self --target-database=${MIGRATE_DB_NAME} -y

echo -e "‚úÖ Migration database '${MIGRATE_DB_NAME}' is now populated."
echo -e "${green}${divider}${NC}"
